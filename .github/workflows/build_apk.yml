name: Build Kivy Android APK

on:
  push:
    branches:
      - main # Trigger on push to the 'main' branch
  pull_request:
    branches:
      - main # Trigger on pull requests to the 'main' branch

jobs:
  build:
    runs-on: ubuntu-latest # Use the latest Ubuntu runner

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4 # Action to check out your repository code

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.10' # Specify a Python version compatible with Kivy/Buildozer

    - name: Install Buildozer and Cython
      # Cython is a build dependency required by Buildozer for compilation.
      run: pip install buildozer cython

    - name: Install system dependencies for Buildozer
      # These are Linux packages required by Buildozer for Android compilation
      run: |
        sudo apt-get update
        sudo apt-get install -y git zip unzip openjdk-17-jdk autoconf libtool pkg-config zlib1g-dev libncurses5-dev libncursesw5-dev libssl-dev libffi-dev libsqlite3-dev liblzma-dev libbz2-dev

    - name: Set up Android SDK and NDK
      # Explicitly set ANDROID_SDK_ROOT and ensure command-line tools are available.
      # This step is crucial for reliable SDK setup and license acceptance.
      run: |
        # Ensure ANDROID_SDK_ROOT is set to the default path used by GitHub Actions runners
        echo "ANDROID_SDK_ROOT=/usr/local/lib/android/sdk" >> $GITHUB_ENV
        export ANDROID_SDK_ROOT=/usr/local/lib/android/sdk

        # Install command-line tools first, which contains sdkmanager
        yes | sdkmanager --install "cmdline-tools;latest"

        # Add sdkmanager to PATH (ensure it's executable)
        echo "$ANDROID_SDK_ROOT/cmdline-tools/latest/bin" >> $GITHUB_PATH
        export PATH="$ANDROID_SDK_ROOT/cmdline-tools/latest/bin:$PATH" # Prepend to ensure it's found

        # Install necessary SDK components and NDK explicitly
        # Using a stable NDK version (25.2.8704281 is equivalent to r25b)
        # This aligns with the 'android.ndk = 25b' in buildozer.spec
        sdkmanager --install "platforms;android-33" "build-tools;33.0.0" "ndk;25.2.8704281"

        # Accept Android SDK licenses
        # The 'yes' command automatically confirms all license prompts.
        yes | sdkmanager --licenses

    - name: Build Android Debug APK
      # Now that SDK is explicitly set up and licenses accepted, run buildozer.
      run: buildozer android debug

    - name: Upload APK artifact
      # This step uploads the generated APK as a workflow artifact,
      # which you can download from the GitHub Actions run page.
      uses: actions/upload-artifact@v4
      with:
        name: FaceApp-APK
        path: bin/*.apk # The APK will be in the 'bin' directory created by Buildozer
        retention-days: 7 # How long to keep the artifact available for download
