name: Build Kivy Android APK

on:
  push:
    branches:
      - main # Or your main branch name, e.g., master

jobs:
  build-apk:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.9' # Kivy/Buildozer often work well with Python 3.9 or 3.10

    - name: Install Buildozer
      run: |
        pip install buildozer

    - name: Set up Android SDK and NDK
      # This step installs the necessary Android SDK command-line tools and NDK
      # and accepts the licenses, making `sdkmanager` available.
      run: |
        # Create a directory for Android SDK
        mkdir -p "$HOME/android-sdk"
        export ANDROID_HOME="$HOME/android-sdk"
        export PATH="$ANDROID_HOME/cmdline-tools/latest/bin:$ANDROID_HOME/platform-tools:$PATH"

        # Download Android command-line tools
        wget -q https://dl.google.com/android/repository/commandlinetools-linux-8583021_latest.zip -O /tmp/cmdline-tools.zip
        unzip -q /tmp/cmdline-tools.zip -d "$ANDROID_HOME/cmdline-tools"
        mv "$ANDROID_HOME/cmdline-tools/cmdline-tools" "$ANDROID_HOME/cmdline-tools/latest"

        # Install necessary SDK components (e.g., platform-tools, build-tools, platforms)
        # The NDK version should match what's specified in buildozer.spec (android.ndk = 21b)
        # For NDK 21b, the corresponding package is 'ndk;21.4.7075529' or similar.
        # It's safer to let Buildozer download NDK unless a specific version is absolutely required and known to be available via sdkmanager.
        # However, for the 'sdkmanager: command not found' error, installing basic platform-tools is key.
        echo "y" | sdkmanager "platform-tools" "build-tools;33.0.0" "platforms;android-33"

        # Accept Android SDK licenses
        yes | sdkmanager --licenses || true

    - name: Cache Buildozer dependencies
      uses: actions/cache@v4
      with:
        path: .buildozer
        key: ${{ runner.os }}-buildozer-${{ hashFiles('buildozer.spec') }}
        restore-keys: |
          ${{ runner.os }}-buildozer-

    - name: Add execute permission to main.py (if needed)
      run: chmod +x main.py
      # This step might be necessary if your main.py doesn't have execute permissions in your repo.

    - name: Build Android APK
      run: |
        # Ensure ANDROID_HOME and PATH are set for Buildozer
        export ANDROID_HOME="$HOME/android-sdk"
        export PATH="$ANDROID_HOME/cmdline-tools/latest/bin:$ANDROID_HOME/platform-tools:$PATH"
        buildozer android debug

    - name: Upload APK artifact
      uses: actions/upload-artifact@v4
      with:
        name: FaceAppAttendance-APK
        path: bin/*.apk
        # The APK will typically be named something like 'faceappattendance-0.1-debug.apk'
        # and located in the 'bin/' directory created by Buildozer.
